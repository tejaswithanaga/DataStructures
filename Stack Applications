#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#define MAX_SIZE 100
int stack[MAX_SIZE];
int top = -1;
void push(int element) {
    if (top == MAX_SIZE - 1) {
        printf("Error: Stack Overflow\n");
        return;
    }
    stack[++top] = element;
}
int pop() {
    if (top == -1) {
        printf("Error: Stack Underflow\n");
        return -1;
    }
    return stack[top--];
}
int peek() {
    if (top == -1) {
        printf("Error: Stack Underflow\n");
        return -1;
    }
    return stack[top];
}
int isOperator(char c) {
    return (c == '+' || c == '-' || c == '*' || c == '/');
}
int evaluatePostfix(char* expression) {
    int i, operand1, operand2, result;
    for (i = 0; expression[i]; i++) {
        if (isdigit(expression[i])) {
            push(expression[i] - '0');
        } else if (isOperator(expression[i])) {
            operand2 = pop();
            operand1 = pop();
            switch (expression[i]) {
                case '+':
                    result = operand1 + operand2;
                    break;
                case '-':
                    result = operand1 - operand2;
                    break;
                case '*':
                    result = operand1 * operand2;
                    break;
                case '/':
                    result = operand1 / operand2;
                    break;
            }
            push(result);
        }
    }
    return pop();
}
int main() {
    char postfix[] = "23+54*+";
    int result = evaluatePostfix(postfix);
    printf("Postfix expression: %s\n", postfix);
    printf("Result: %d\n", result);
    return 0;
}
